-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convolution is
port (
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (2 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (3 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of convolution is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal tmp_15_fu_48_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_48_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_15_fu_48_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_2_fu_60_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_2_fu_60_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_fu_54_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_2_fu_60_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_72_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_66_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_78_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_2_fu_60_p10 : STD_LOGIC_VECTOR (31 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return <= std_logic_vector(unsigned(tmp_fu_66_p2) + unsigned(tmp1_fu_78_p2));
    tmp1_fu_78_p2 <= std_logic_vector(unsigned(tmp_15_2_fu_60_p2) + unsigned(tmp_2_fu_72_p2));
    tmp_15_2_fu_60_p0 <= p_read5;
    tmp_15_2_fu_60_p1 <= tmp_15_2_fu_60_p10(4 - 1 downto 0);
    tmp_15_2_fu_60_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read2),32));
    tmp_15_2_fu_60_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_15_2_fu_60_p0) * signed('0' &tmp_15_2_fu_60_p1))), 32));
    tmp_15_fu_48_p0 <= p_read3;
    tmp_15_fu_48_p1 <= p_read;
    tmp_15_fu_48_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_15_fu_48_p0) * signed(tmp_15_fu_48_p1))), 32));
    tmp_1_fu_54_p2 <= std_logic_vector(shift_left(unsigned(tmp_15_fu_48_p2),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_2_fu_72_p2 <= std_logic_vector(shift_left(unsigned(tmp_15_2_fu_60_p2),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_fu_66_p2 <= std_logic_vector(unsigned(tmp_1_fu_54_p2) + unsigned(tmp_15_fu_48_p2));
end behav;
