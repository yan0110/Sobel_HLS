// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "edge_det.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic edge_det::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic edge_det::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> edge_det::ap_ST_fsm_state1 = "1";
const sc_lv<9> edge_det::ap_ST_fsm_state2 = "10";
const sc_lv<9> edge_det::ap_ST_fsm_state3 = "100";
const sc_lv<9> edge_det::ap_ST_fsm_state4 = "1000";
const sc_lv<9> edge_det::ap_ST_fsm_state5 = "10000";
const sc_lv<9> edge_det::ap_ST_fsm_state6 = "100000";
const sc_lv<9> edge_det::ap_ST_fsm_state7 = "1000000";
const sc_lv<9> edge_det::ap_ST_fsm_state8 = "10000000";
const sc_lv<9> edge_det::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> edge_det::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> edge_det::ap_const_lv32_1 = "1";
const sc_lv<1> edge_det::ap_const_lv1_0 = "0";
const sc_lv<32> edge_det::ap_const_lv32_2 = "10";
const sc_lv<32> edge_det::ap_const_lv32_3 = "11";
const sc_lv<32> edge_det::ap_const_lv32_4 = "100";
const sc_lv<32> edge_det::ap_const_lv32_6 = "110";
const sc_lv<7> edge_det::ap_const_lv7_0 = "0000000";
const sc_lv<1> edge_det::ap_const_lv1_1 = "1";
const sc_lv<14> edge_det::ap_const_lv14_0 = "00000000000000";
const sc_lv<32> edge_det::ap_const_lv32_8 = "1000";
const bool edge_det::ap_const_boolean_0 = false;
const sc_lv<2> edge_det::ap_const_lv2_0 = "00";
const sc_lv<32> edge_det::ap_const_lv32_5 = "101";
const sc_lv<32> edge_det::ap_const_lv32_7 = "111";
const sc_lv<14> edge_det::ap_const_lv14_64 = "1100100";
const sc_lv<7> edge_det::ap_const_lv7_64 = "1100100";
const sc_lv<7> edge_det::ap_const_lv7_1 = "1";
const sc_lv<7> edge_det::ap_const_lv7_61 = "1100001";
const sc_lv<2> edge_det::ap_const_lv2_3 = "11";
const sc_lv<2> edge_det::ap_const_lv2_1 = "1";
const sc_lv<32> edge_det::ap_const_lv32_D = "1101";
const bool edge_det::ap_const_boolean_1 = true;

edge_det::edge_det(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sob_x_U = new edge_det_sob_x("sob_x_U");
    sob_x_U->clk(ap_clk);
    sob_x_U->reset(ap_rst);
    sob_x_U->address0(grp_convolution_fu_199_operatr_address0);
    sob_x_U->ce0(sob_x_ce0);
    sob_x_U->q0(sob_x_q0);
    sob_y_U = new edge_det_sob_y("sob_y_U");
    sob_y_U->clk(ap_clk);
    sob_y_U->reset(ap_rst);
    sob_y_U->address0(grp_convolution_fu_199_operatr_address0);
    sob_y_U->ce0(sob_y_ce0);
    sob_y_U->q0(sob_y_q0);
    block_U = new edge_det_block("block_U");
    block_U->clk(ap_clk);
    block_U->reset(ap_rst);
    block_U->address0(block_address0);
    block_U->ce0(block_ce0);
    block_U->we0(block_we0);
    block_U->d0(video_q0);
    block_U->q0(block_q0);
    grp_convolution_fu_199 = new convolution("grp_convolution_fu_199");
    grp_convolution_fu_199->ap_clk(ap_clk);
    grp_convolution_fu_199->ap_rst(ap_rst);
    grp_convolution_fu_199->ap_start(grp_convolution_fu_199_ap_start);
    grp_convolution_fu_199->ap_done(grp_convolution_fu_199_ap_done);
    grp_convolution_fu_199->ap_idle(grp_convolution_fu_199_ap_idle);
    grp_convolution_fu_199->ap_ready(grp_convolution_fu_199_ap_ready);
    grp_convolution_fu_199->operatr_address0(grp_convolution_fu_199_operatr_address0);
    grp_convolution_fu_199->operatr_ce0(grp_convolution_fu_199_operatr_ce0);
    grp_convolution_fu_199->operatr_q0(grp_convolution_fu_199_operatr_q0);
    grp_convolution_fu_199->block_r_address0(grp_convolution_fu_199_block_r_address0);
    grp_convolution_fu_199->block_r_ce0(grp_convolution_fu_199_block_r_ce0);
    grp_convolution_fu_199->block_r_q0(block_q0);
    grp_convolution_fu_199->ap_return(grp_convolution_fu_199_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state9_on_subcall_done);
    sensitive << ( or_cond_reg_418 );
    sensitive << ( grp_convolution_fu_199_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_219_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_219_p2 );

    SC_METHOD(thread_block_address0);
    sensitive << ( or_cond_reg_418 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_convolution_fu_199_block_r_address0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_13_fu_376_p1 );

    SC_METHOD(thread_block_ce0);
    sensitive << ( or_cond_reg_418 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_convolution_fu_199_block_r_ce0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_block_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_exitcond1_fu_279_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( m_reg_177 );

    SC_METHOD(thread_exitcond2_fu_242_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_166 );

    SC_METHOD(thread_exitcond3_fu_219_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_142 );

    SC_METHOD(thread_exitcond_fu_329_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( n_reg_188 );

    SC_METHOD(thread_grp_convolution_fu_199_ap_start);
    sensitive << ( ap_reg_grp_convolution_fu_199_ap_start );

    SC_METHOD(thread_grp_convolution_fu_199_operatr_q0);
    sensitive << ( sob_x_q0 );
    sensitive << ( sob_y_q0 );
    sensitive << ( or_cond_reg_418 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_fu_208_p1);
    sensitive << ( j_cast7_fu_237_p1 );
    sensitive << ( j_cast7_reg_404 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_208_p2);
    sensitive << ( phi_mul_reg_154 );
    sensitive << ( grp_fu_208_p1 );

    SC_METHOD(thread_i_1_fu_225_p2);
    sensitive << ( i_reg_142 );

    SC_METHOD(thread_j_1_fu_248_p2);
    sensitive << ( j_reg_166 );

    SC_METHOD(thread_j_cast7_fu_237_p1);
    sensitive << ( j_reg_166 );

    SC_METHOD(thread_m_1_fu_285_p2);
    sensitive << ( m_reg_177 );

    SC_METHOD(thread_m_cast5_fu_275_p1);
    sensitive << ( m_reg_177 );

    SC_METHOD(thread_m_cast6_fu_271_p1);
    sensitive << ( m_reg_177 );

    SC_METHOD(thread_n_1_fu_335_p2);
    sensitive << ( n_reg_188 );

    SC_METHOD(thread_n_cast3_fu_325_p1);
    sensitive << ( n_reg_188 );

    SC_METHOD(thread_next_mul_fu_213_p2);
    sensitive << ( phi_mul_reg_154 );

    SC_METHOD(thread_or_cond_fu_260_p2);
    sensitive << ( tmp_reg_399 );
    sensitive << ( tmp_3_fu_254_p2 );

    SC_METHOD(thread_p_shl_cast_fu_315_p1);
    sensitive << ( p_shl_fu_307_p3 );

    SC_METHOD(thread_p_shl_fu_307_p3);
    sensitive << ( m_reg_177 );

    SC_METHOD(thread_sob_x1_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_5_fu_265_p1 );
    sensitive << ( tmp_7_fu_381_p1 );

    SC_METHOD(thread_sob_x1_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_block_state9_on_subcall_done );

    SC_METHOD(thread_sob_x1_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( value_reg_458 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_sob_x1_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( or_cond_fu_260_p2 );
    sensitive << ( or_cond_reg_418 );
    sensitive << ( exitcond2_fu_242_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_block_state9_on_subcall_done );

    SC_METHOD(thread_sob_x_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_convolution_fu_199_operatr_ce0 );

    SC_METHOD(thread_sob_y1_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_5_fu_265_p1 );
    sensitive << ( tmp_7_fu_381_p1 );

    SC_METHOD(thread_sob_y1_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_block_state9_on_subcall_done );

    SC_METHOD(thread_sob_y1_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_convolution_fu_199_ap_return );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_sob_y1_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( or_cond_fu_260_p2 );
    sensitive << ( or_cond_reg_418 );
    sensitive << ( exitcond2_fu_242_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_block_state9_on_subcall_done );

    SC_METHOD(thread_sob_y_ce0);
    sensitive << ( or_cond_reg_418 );
    sensitive << ( grp_convolution_fu_199_operatr_ce0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_tmp1_fu_350_p3);
    sensitive << ( n_reg_188 );
    sensitive << ( tmp_15_fu_341_p4 );

    SC_METHOD(thread_tmp_10_fu_358_p2);
    sensitive << ( j_cast7_reg_404 );
    sensitive << ( tmp1_fu_350_p3 );

    SC_METHOD(thread_tmp_11_fu_363_p1);
    sensitive << ( tmp_10_fu_358_p2 );

    SC_METHOD(thread_tmp_12_cast_fu_373_p1);
    sensitive << ( tmp_12_reg_453 );

    SC_METHOD(thread_tmp_12_fu_368_p2);
    sensitive << ( tmp_s_reg_435 );
    sensitive << ( n_cast3_fu_325_p1 );

    SC_METHOD(thread_tmp_13_fu_376_p1);
    sensitive << ( tmp_12_cast_fu_373_p1 );

    SC_METHOD(thread_tmp_15_fu_341_p4);
    sensitive << ( tmp_9_reg_430 );

    SC_METHOD(thread_tmp_3_fu_254_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_242_p2 );
    sensitive << ( j_reg_166 );

    SC_METHOD(thread_tmp_5_fu_265_p1);
    sensitive << ( grp_fu_208_p2 );

    SC_METHOD(thread_tmp_7_fu_381_p1);
    sensitive << ( tmp_6_reg_463 );

    SC_METHOD(thread_tmp_8_fu_291_p2);
    sensitive << ( i_reg_142 );
    sensitive << ( m_cast6_fu_271_p1 );

    SC_METHOD(thread_tmp_9_fu_301_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_9_fu_301_p00 );

    SC_METHOD(thread_tmp_9_fu_301_p00);
    sensitive << ( tmp_8_fu_291_p2 );

    SC_METHOD(thread_tmp_9_fu_301_p2);
    sensitive << ( tmp_9_fu_301_p0 );

    SC_METHOD(thread_tmp_fu_231_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_219_p2 );
    sensitive << ( i_reg_142 );

    SC_METHOD(thread_tmp_s_fu_319_p2);
    sensitive << ( p_shl_cast_fu_315_p1 );
    sensitive << ( m_cast5_fu_275_p1 );

    SC_METHOD(thread_video_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_11_fu_363_p1 );

    SC_METHOD(thread_video_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_219_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( or_cond_fu_260_p2 );
    sensitive << ( exitcond2_fu_242_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_279_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_329_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_convolution_fu_199_ap_done );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_block_state9_on_subcall_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000001";
    ap_reg_grp_convolution_fu_199_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "edge_det_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, video_address0, "(port)video_address0");
    sc_trace(mVcdFile, video_ce0, "(port)video_ce0");
    sc_trace(mVcdFile, video_q0, "(port)video_q0");
    sc_trace(mVcdFile, sob_x1_address0, "(port)sob_x1_address0");
    sc_trace(mVcdFile, sob_x1_ce0, "(port)sob_x1_ce0");
    sc_trace(mVcdFile, sob_x1_we0, "(port)sob_x1_we0");
    sc_trace(mVcdFile, sob_x1_d0, "(port)sob_x1_d0");
    sc_trace(mVcdFile, sob_y1_address0, "(port)sob_y1_address0");
    sc_trace(mVcdFile, sob_y1_ce0, "(port)sob_y1_ce0");
    sc_trace(mVcdFile, sob_y1_we0, "(port)sob_y1_we0");
    sc_trace(mVcdFile, sob_y1_d0, "(port)sob_y1_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, sob_x_ce0, "sob_x_ce0");
    sc_trace(mVcdFile, sob_x_q0, "sob_x_q0");
    sc_trace(mVcdFile, sob_y_ce0, "sob_y_ce0");
    sc_trace(mVcdFile, sob_y_q0, "sob_y_q0");
    sc_trace(mVcdFile, next_mul_fu_213_p2, "next_mul_fu_213_p2");
    sc_trace(mVcdFile, next_mul_reg_386, "next_mul_reg_386");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_1_fu_225_p2, "i_1_fu_225_p2");
    sc_trace(mVcdFile, i_1_reg_394, "i_1_reg_394");
    sc_trace(mVcdFile, tmp_fu_231_p2, "tmp_fu_231_p2");
    sc_trace(mVcdFile, tmp_reg_399, "tmp_reg_399");
    sc_trace(mVcdFile, exitcond3_fu_219_p2, "exitcond3_fu_219_p2");
    sc_trace(mVcdFile, j_cast7_fu_237_p1, "j_cast7_fu_237_p1");
    sc_trace(mVcdFile, j_cast7_reg_404, "j_cast7_reg_404");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, j_1_fu_248_p2, "j_1_fu_248_p2");
    sc_trace(mVcdFile, j_1_reg_413, "j_1_reg_413");
    sc_trace(mVcdFile, or_cond_fu_260_p2, "or_cond_fu_260_p2");
    sc_trace(mVcdFile, or_cond_reg_418, "or_cond_reg_418");
    sc_trace(mVcdFile, exitcond2_fu_242_p2, "exitcond2_fu_242_p2");
    sc_trace(mVcdFile, m_1_fu_285_p2, "m_1_fu_285_p2");
    sc_trace(mVcdFile, m_1_reg_425, "m_1_reg_425");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_9_fu_301_p2, "tmp_9_fu_301_p2");
    sc_trace(mVcdFile, tmp_9_reg_430, "tmp_9_reg_430");
    sc_trace(mVcdFile, exitcond1_fu_279_p2, "exitcond1_fu_279_p2");
    sc_trace(mVcdFile, tmp_s_fu_319_p2, "tmp_s_fu_319_p2");
    sc_trace(mVcdFile, tmp_s_reg_435, "tmp_s_reg_435");
    sc_trace(mVcdFile, n_1_fu_335_p2, "n_1_fu_335_p2");
    sc_trace(mVcdFile, n_1_reg_443, "n_1_reg_443");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, exitcond_fu_329_p2, "exitcond_fu_329_p2");
    sc_trace(mVcdFile, tmp_12_fu_368_p2, "tmp_12_fu_368_p2");
    sc_trace(mVcdFile, tmp_12_reg_453, "tmp_12_reg_453");
    sc_trace(mVcdFile, grp_convolution_fu_199_ap_return, "grp_convolution_fu_199_ap_return");
    sc_trace(mVcdFile, value_reg_458, "value_reg_458");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_convolution_fu_199_ap_done, "grp_convolution_fu_199_ap_done");
    sc_trace(mVcdFile, grp_fu_208_p2, "grp_fu_208_p2");
    sc_trace(mVcdFile, tmp_6_reg_463, "tmp_6_reg_463");
    sc_trace(mVcdFile, block_address0, "block_address0");
    sc_trace(mVcdFile, block_ce0, "block_ce0");
    sc_trace(mVcdFile, block_we0, "block_we0");
    sc_trace(mVcdFile, block_q0, "block_q0");
    sc_trace(mVcdFile, grp_convolution_fu_199_ap_start, "grp_convolution_fu_199_ap_start");
    sc_trace(mVcdFile, grp_convolution_fu_199_ap_idle, "grp_convolution_fu_199_ap_idle");
    sc_trace(mVcdFile, grp_convolution_fu_199_ap_ready, "grp_convolution_fu_199_ap_ready");
    sc_trace(mVcdFile, grp_convolution_fu_199_operatr_address0, "grp_convolution_fu_199_operatr_address0");
    sc_trace(mVcdFile, grp_convolution_fu_199_operatr_ce0, "grp_convolution_fu_199_operatr_ce0");
    sc_trace(mVcdFile, grp_convolution_fu_199_operatr_q0, "grp_convolution_fu_199_operatr_q0");
    sc_trace(mVcdFile, grp_convolution_fu_199_block_r_address0, "grp_convolution_fu_199_block_r_address0");
    sc_trace(mVcdFile, grp_convolution_fu_199_block_r_ce0, "grp_convolution_fu_199_block_r_ce0");
    sc_trace(mVcdFile, i_reg_142, "i_reg_142");
    sc_trace(mVcdFile, phi_mul_reg_154, "phi_mul_reg_154");
    sc_trace(mVcdFile, j_reg_166, "j_reg_166");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_block_state9_on_subcall_done, "ap_block_state9_on_subcall_done");
    sc_trace(mVcdFile, m_reg_177, "m_reg_177");
    sc_trace(mVcdFile, n_reg_188, "n_reg_188");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_reg_grp_convolution_fu_199_ap_start, "ap_reg_grp_convolution_fu_199_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_5_fu_265_p1, "tmp_5_fu_265_p1");
    sc_trace(mVcdFile, tmp_11_fu_363_p1, "tmp_11_fu_363_p1");
    sc_trace(mVcdFile, tmp_13_fu_376_p1, "tmp_13_fu_376_p1");
    sc_trace(mVcdFile, tmp_7_fu_381_p1, "tmp_7_fu_381_p1");
    sc_trace(mVcdFile, grp_fu_208_p1, "grp_fu_208_p1");
    sc_trace(mVcdFile, tmp_3_fu_254_p2, "tmp_3_fu_254_p2");
    sc_trace(mVcdFile, m_cast6_fu_271_p1, "m_cast6_fu_271_p1");
    sc_trace(mVcdFile, tmp_8_fu_291_p2, "tmp_8_fu_291_p2");
    sc_trace(mVcdFile, tmp_9_fu_301_p0, "tmp_9_fu_301_p0");
    sc_trace(mVcdFile, p_shl_fu_307_p3, "p_shl_fu_307_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_315_p1, "p_shl_cast_fu_315_p1");
    sc_trace(mVcdFile, m_cast5_fu_275_p1, "m_cast5_fu_275_p1");
    sc_trace(mVcdFile, tmp_15_fu_341_p4, "tmp_15_fu_341_p4");
    sc_trace(mVcdFile, tmp1_fu_350_p3, "tmp1_fu_350_p3");
    sc_trace(mVcdFile, tmp_10_fu_358_p2, "tmp_10_fu_358_p2");
    sc_trace(mVcdFile, n_cast3_fu_325_p1, "n_cast3_fu_325_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_373_p1, "tmp_12_cast_fu_373_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, tmp_9_fu_301_p00, "tmp_9_fu_301_p00");
#endif

    }
    mHdltvinHandle.open("edge_det.hdltvin.dat");
    mHdltvoutHandle.open("edge_det.hdltvout.dat");
}

edge_det::~edge_det() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete sob_x_U;
    delete sob_y_U;
    delete block_U;
    delete grp_convolution_fu_199;
}

void edge_det::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_convolution_fu_199_ap_start = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
              esl_seteq<1,1,1>(exitcond1_fu_279_p2.read(), ap_const_lv1_1)) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
            ap_reg_grp_convolution_fu_199_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_convolution_fu_199_ap_ready.read())) {
            ap_reg_grp_convolution_fu_199_ap_start = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_242_p2.read(), ap_const_lv1_1))) {
        i_reg_142 = i_1_reg_394.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_142 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0))) {
        j_reg_166 = j_1_reg_413.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_219_p2.read(), ap_const_lv1_0))) {
        j_reg_166 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_242_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_260_p2.read()))) {
        m_reg_177 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_329_p2.read(), ap_const_lv1_1))) {
        m_reg_177 = m_1_reg_425.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        n_reg_188 = n_1_reg_443.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_279_p2.read()))) {
        n_reg_188 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_242_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_154 = next_mul_reg_386.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_154 = ap_const_lv14_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_394 = i_1_fu_225_p2.read();
        next_mul_reg_386 = next_mul_fu_213_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_1_reg_413 = j_1_fu_248_p2.read();
        j_cast7_reg_404 = j_cast7_fu_237_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        m_1_reg_425 = m_1_fu_285_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        n_1_reg_443 = n_1_fu_335_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_242_p2.read()))) {
        or_cond_reg_418 = or_cond_fu_260_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_329_p2.read()))) {
        tmp_12_reg_453 = tmp_12_fu_368_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(grp_convolution_fu_199_ap_done.read(), ap_const_logic_1))) {
        tmp_6_reg_463 = grp_fu_208_p2.read();
        value_reg_458 = grp_convolution_fu_199_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_279_p2.read()))) {
        tmp_9_reg_430 = tmp_9_fu_301_p2.read();
        tmp_s_reg_435 = tmp_s_fu_319_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_219_p2.read(), ap_const_lv1_0))) {
        tmp_reg_399 = tmp_fu_231_p2.read();
    }
}

void edge_det::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void edge_det::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void edge_det::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void edge_det::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void edge_det::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void edge_det::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void edge_det::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void edge_det::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void edge_det::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void edge_det::thread_ap_block_state9_on_subcall_done() {
    ap_block_state9_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_convolution_fu_199_ap_done.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_418.read()));
}

void edge_det::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_219_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void edge_det::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void edge_det::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_219_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void edge_det::thread_block_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        block_address0 =  (sc_lv<4>) (tmp_13_fu_376_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_418.read())))) {
        block_address0 = grp_convolution_fu_199_block_r_address0.read();
    } else {
        block_address0 = "XXXX";
    }
}

void edge_det::thread_block_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        block_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_418.read())))) {
        block_ce0 = grp_convolution_fu_199_block_r_ce0.read();
    } else {
        block_ce0 = ap_const_logic_0;
    }
}

void edge_det::thread_block_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        block_we0 = ap_const_logic_1;
    } else {
        block_we0 = ap_const_logic_0;
    }
}

void edge_det::thread_exitcond1_fu_279_p2() {
    exitcond1_fu_279_p2 = (!m_reg_177.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(m_reg_177.read() == ap_const_lv2_3);
}

void edge_det::thread_exitcond2_fu_242_p2() {
    exitcond2_fu_242_p2 = (!j_reg_166.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_166.read() == ap_const_lv7_64);
}

void edge_det::thread_exitcond3_fu_219_p2() {
    exitcond3_fu_219_p2 = (!i_reg_142.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_142.read() == ap_const_lv7_64);
}

void edge_det::thread_exitcond_fu_329_p2() {
    exitcond_fu_329_p2 = (!n_reg_188.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(n_reg_188.read() == ap_const_lv2_3);
}

void edge_det::thread_grp_convolution_fu_199_ap_start() {
    grp_convolution_fu_199_ap_start = ap_reg_grp_convolution_fu_199_ap_start.read();
}

void edge_det::thread_grp_convolution_fu_199_operatr_q0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_418.read()))) {
        grp_convolution_fu_199_operatr_q0 = sob_y_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_convolution_fu_199_operatr_q0 = sob_x_q0.read();
    } else {
        grp_convolution_fu_199_operatr_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void edge_det::thread_grp_fu_208_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_208_p1 = j_cast7_reg_404.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_208_p1 = j_cast7_fu_237_p1.read();
    } else {
        grp_fu_208_p1 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void edge_det::thread_grp_fu_208_p2() {
    grp_fu_208_p2 = (!phi_mul_reg_154.read().is_01() || !grp_fu_208_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul_reg_154.read()) + sc_biguint<14>(grp_fu_208_p1.read()));
}

void edge_det::thread_i_1_fu_225_p2() {
    i_1_fu_225_p2 = (!i_reg_142.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_reg_142.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void edge_det::thread_j_1_fu_248_p2() {
    j_1_fu_248_p2 = (!j_reg_166.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_reg_166.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void edge_det::thread_j_cast7_fu_237_p1() {
    j_cast7_fu_237_p1 = esl_zext<14,7>(j_reg_166.read());
}

void edge_det::thread_m_1_fu_285_p2() {
    m_1_fu_285_p2 = (!m_reg_177.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(m_reg_177.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void edge_det::thread_m_cast5_fu_275_p1() {
    m_cast5_fu_275_p1 = esl_zext<5,2>(m_reg_177.read());
}

void edge_det::thread_m_cast6_fu_271_p1() {
    m_cast6_fu_271_p1 = esl_zext<7,2>(m_reg_177.read());
}

void edge_det::thread_n_1_fu_335_p2() {
    n_1_fu_335_p2 = (!n_reg_188.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(n_reg_188.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void edge_det::thread_n_cast3_fu_325_p1() {
    n_cast3_fu_325_p1 = esl_zext<5,2>(n_reg_188.read());
}

void edge_det::thread_next_mul_fu_213_p2() {
    next_mul_fu_213_p2 = (!phi_mul_reg_154.read().is_01() || !ap_const_lv14_64.is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul_reg_154.read()) + sc_biguint<14>(ap_const_lv14_64));
}

void edge_det::thread_or_cond_fu_260_p2() {
    or_cond_fu_260_p2 = (tmp_reg_399.read() | tmp_3_fu_254_p2.read());
}

void edge_det::thread_p_shl_cast_fu_315_p1() {
    p_shl_cast_fu_315_p1 = esl_zext<5,4>(p_shl_fu_307_p3.read());
}

void edge_det::thread_p_shl_fu_307_p3() {
    p_shl_fu_307_p3 = esl_concat<2,2>(m_reg_177.read(), ap_const_lv2_0);
}

void edge_det::thread_sob_x1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        sob_x1_address0 =  (sc_lv<14>) (tmp_7_fu_381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sob_x1_address0 =  (sc_lv<14>) (tmp_5_fu_265_p1.read());
    } else {
        sob_x1_address0 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void edge_det::thread_sob_x1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0)))) {
        sob_x1_ce0 = ap_const_logic_1;
    } else {
        sob_x1_ce0 = ap_const_logic_0;
    }
}

void edge_det::thread_sob_x1_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        sob_x1_d0 = value_reg_458.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sob_x1_d0 = ap_const_lv32_0;
    } else {
        sob_x1_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void edge_det::thread_sob_x1_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_242_p2.read()) && 
          esl_seteq<1,1,1>(or_cond_fu_260_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_418.read()) && 
          esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0)))) {
        sob_x1_we0 = ap_const_logic_1;
    } else {
        sob_x1_we0 = ap_const_logic_0;
    }
}

void edge_det::thread_sob_x_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        sob_x_ce0 = grp_convolution_fu_199_operatr_ce0.read();
    } else {
        sob_x_ce0 = ap_const_logic_0;
    }
}

void edge_det::thread_sob_y1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        sob_y1_address0 =  (sc_lv<14>) (tmp_7_fu_381_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sob_y1_address0 =  (sc_lv<14>) (tmp_5_fu_265_p1.read());
    } else {
        sob_y1_address0 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void edge_det::thread_sob_y1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0)))) {
        sob_y1_ce0 = ap_const_logic_1;
    } else {
        sob_y1_ce0 = ap_const_logic_0;
    }
}

void edge_det::thread_sob_y1_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        sob_y1_d0 = grp_convolution_fu_199_ap_return.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sob_y1_d0 = ap_const_lv32_0;
    } else {
        sob_y1_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void edge_det::thread_sob_y1_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_242_p2.read()) && 
          esl_seteq<1,1,1>(or_cond_fu_260_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_418.read()) && 
          esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0)))) {
        sob_y1_we0 = ap_const_logic_1;
    } else {
        sob_y1_we0 = ap_const_logic_0;
    }
}

void edge_det::thread_sob_y_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_418.read()))) {
        sob_y_ce0 = grp_convolution_fu_199_operatr_ce0.read();
    } else {
        sob_y_ce0 = ap_const_logic_0;
    }
}

void edge_det::thread_tmp1_fu_350_p3() {
    tmp1_fu_350_p3 = esl_concat<12,2>(tmp_15_fu_341_p4.read(), n_reg_188.read());
}

void edge_det::thread_tmp_10_fu_358_p2() {
    tmp_10_fu_358_p2 = (!j_cast7_reg_404.read().is_01() || !tmp1_fu_350_p3.read().is_01())? sc_lv<14>(): (sc_biguint<14>(j_cast7_reg_404.read()) + sc_biguint<14>(tmp1_fu_350_p3.read()));
}

void edge_det::thread_tmp_11_fu_363_p1() {
    tmp_11_fu_363_p1 = esl_zext<64,14>(tmp_10_fu_358_p2.read());
}

void edge_det::thread_tmp_12_cast_fu_373_p1() {
    tmp_12_cast_fu_373_p1 = esl_sext<32,5>(tmp_12_reg_453.read());
}

void edge_det::thread_tmp_12_fu_368_p2() {
    tmp_12_fu_368_p2 = (!n_cast3_fu_325_p1.read().is_01() || !tmp_s_reg_435.read().is_01())? sc_lv<5>(): (sc_biguint<5>(n_cast3_fu_325_p1.read()) + sc_biguint<5>(tmp_s_reg_435.read()));
}

void edge_det::thread_tmp_13_fu_376_p1() {
    tmp_13_fu_376_p1 = esl_zext<64,32>(tmp_12_cast_fu_373_p1.read());
}

void edge_det::thread_tmp_15_fu_341_p4() {
    tmp_15_fu_341_p4 = tmp_9_reg_430.read().range(13, 2);
}

void edge_det::thread_tmp_3_fu_254_p2() {
    tmp_3_fu_254_p2 = (!j_reg_166.read().is_01() || !ap_const_lv7_61.is_01())? sc_lv<1>(): (sc_biguint<7>(j_reg_166.read()) > sc_biguint<7>(ap_const_lv7_61));
}

void edge_det::thread_tmp_5_fu_265_p1() {
    tmp_5_fu_265_p1 = esl_zext<64,14>(grp_fu_208_p2.read());
}

void edge_det::thread_tmp_7_fu_381_p1() {
    tmp_7_fu_381_p1 = esl_zext<64,14>(tmp_6_reg_463.read());
}

void edge_det::thread_tmp_8_fu_291_p2() {
    tmp_8_fu_291_p2 = (!m_cast6_fu_271_p1.read().is_01() || !i_reg_142.read().is_01())? sc_lv<7>(): (sc_biguint<7>(m_cast6_fu_271_p1.read()) + sc_biguint<7>(i_reg_142.read()));
}

void edge_det::thread_tmp_9_fu_301_p0() {
    tmp_9_fu_301_p0 =  (sc_lv<7>) (tmp_9_fu_301_p00.read());
}

void edge_det::thread_tmp_9_fu_301_p00() {
    tmp_9_fu_301_p00 = esl_zext<14,7>(tmp_8_fu_291_p2.read());
}

void edge_det::thread_tmp_9_fu_301_p2() {
    tmp_9_fu_301_p2 = (!tmp_9_fu_301_p0.read().is_01() || !ap_const_lv14_64.is_01())? sc_lv<14>(): sc_biguint<7>(tmp_9_fu_301_p0.read()) * sc_biguint<14>(ap_const_lv14_64);
}

void edge_det::thread_tmp_fu_231_p2() {
    tmp_fu_231_p2 = (!i_reg_142.read().is_01() || !ap_const_lv7_61.is_01())? sc_lv<1>(): (sc_biguint<7>(i_reg_142.read()) > sc_biguint<7>(ap_const_lv7_61));
}

void edge_det::thread_tmp_s_fu_319_p2() {
    tmp_s_fu_319_p2 = (!p_shl_cast_fu_315_p1.read().is_01() || !m_cast5_fu_275_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl_cast_fu_315_p1.read()) - sc_biguint<5>(m_cast5_fu_275_p1.read()));
}

void edge_det::thread_video_address0() {
    video_address0 =  (sc_lv<14>) (tmp_11_fu_363_p1.read());
}

void edge_det::thread_video_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        video_ce0 = ap_const_logic_1;
    } else {
        video_ce0 = ap_const_logic_0;
    }
}

void edge_det::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_219_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_242_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_242_p2.read()) && esl_seteq<1,1,1>(or_cond_fu_260_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_279_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond_fu_329_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(grp_convolution_fu_199_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

void edge_det::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"video_address0\" :  \"" << video_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"video_ce0\" :  \"" << video_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_q0\" :  \"" << video_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sob_x1_address0\" :  \"" << sob_x1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sob_x1_ce0\" :  \"" << sob_x1_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sob_x1_we0\" :  \"" << sob_x1_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sob_x1_d0\" :  \"" << sob_x1_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sob_y1_address0\" :  \"" << sob_y1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sob_y1_ce0\" :  \"" << sob_y1_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sob_y1_we0\" :  \"" << sob_y1_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sob_y1_d0\" :  \"" << sob_y1_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

